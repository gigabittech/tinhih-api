{
    "openapi": "3.0.0",
    "info": {
        "title": "API Documentation",
        "description": "API documentation for tinhih.com",
        "contact": {
            "email": "support@gigabit.agency"
        },
        "version": "1.0.0"
    },
    "paths": {
        "/": {},
        "/api/v1/auth/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Login user",
                "description": "This endpoint allows a user to log in using their email and password. A valid token is returned upon successful authentication.",
                "operationId": "f2abc19906c11eb90a3e6b8fee2ca982",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "nayem@gigabit.agency"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "secret123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful login",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Logged in successfully"
                                        },
                                        "token": {
                                            "type": "string",
                                            "example": "your-generated-token"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid email or password"
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An unexpected error occurred."
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/auth/register": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Register a new user",
                "description": "This endpoint allows a user to register by providing their name, email, password, and other required details.",
                "operationId": "6444acd1a5ffa199d669aee89ef5ae42",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "johndoe@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "password123"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User registered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Account created successfully"
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "payload": {
                                            "properties": {
                                                "token": {
                                                    "type": "string",
                                                    "example": "your-generated-token"
                                                },
                                                "user": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "John Doe"
                                                        },
                                                        "email": {
                                                            "type": "string",
                                                            "example": "johndoe@example.com"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The email field is required."
                                        },
                                        "errors": {
                                            "properties": {
                                                "email": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The email field is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An unexpected error occurred."
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/auth/logout": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Logout user",
                "description": "This endpoint allows an authenticated user to log out by revoking their issued tokens.",
                "operationId": "69318871857337c27d24f213e6d5e596",
                "responses": {
                    "200": {
                        "description": "User logged out successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User logged out successfully"
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - No valid token provided",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized - Token not provided or invalid"
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An unexpected error occurred."
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/user": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get User Details",
                "description": "Fetches details of the currently authenticated user.",
                "operationId": "d405a13e62fab5ed95c15d3571f957fb",
                "responses": {
                    "200": {
                        "description": "User details retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User details"
                                        },
                                        "user": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "role": {
                                                    "type": "string",
                                                    "example": "client"
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Developr"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "nayem@gigabit.agency"
                                                },
                                                "avatar": {
                                                    "type": "string",
                                                    "format": "uri",
                                                    "example": "https://ui-avatars.com/api/?name=Developr"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - User not authenticated"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/locations": {
            "get": {
                "tags": [
                    "Locations"
                ],
                "summary": "Get all Locations",
                "description": "Retrieve all available locations with pagination.",
                "operationId": "70f5a506f0281a95a4ccf44b0dba53e7",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of results per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved paginated locations",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "current_page": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "per_page": {
                                            "type": "integer",
                                            "example": 10
                                        },
                                        "total": {
                                            "type": "integer",
                                            "example": 50
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "type_id": {
                                                        "type": "integer",
                                                        "example": 5
                                                    },
                                                    "user_id": {
                                                        "type": "integer",
                                                        "example": 1001
                                                    },
                                                    "phone": {
                                                        "type": "string",
                                                        "example": "+1234567890"
                                                    },
                                                    "address": {
                                                        "type": "string",
                                                        "example": "123 Main St"
                                                    },
                                                    "link": {
                                                        "type": "string",
                                                        "example": "https://provider.com/location"
                                                    },
                                                    "display_name": {
                                                        "type": "string",
                                                        "example": "Central Clinic"
                                                    },
                                                    "city": {
                                                        "type": "string",
                                                        "example": "New York"
                                                    },
                                                    "state": {
                                                        "type": "string",
                                                        "example": "NY"
                                                    },
                                                    "zip_code": {
                                                        "type": "string",
                                                        "example": "10001"
                                                    },
                                                    "country": {
                                                        "type": "string",
                                                        "example": "USA"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - No valid token provided",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized - Token not provided or invalid"
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Locations not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No locations found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An unexpected error occurred."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Locations"
                ],
                "summary": "Create a new Location",
                "description": "Create a new location entry.",
                "operationId": "3d76a2a5b70a3a57a2a1a4f56b069edf",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "display_name"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "type_id": {
                                        "type": "integer",
                                        "example": 5
                                    },
                                    "user_id": {
                                        "type": "integer",
                                        "example": 1001
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "+1234567890"
                                    },
                                    "address": {
                                        "type": "string",
                                        "example": "123 Main St"
                                    },
                                    "link": {
                                        "type": "string",
                                        "example": "https://provider.com/location"
                                    },
                                    "display_name": {
                                        "type": "string",
                                        "example": "Central Clinic"
                                    },
                                    "city": {
                                        "type": "string",
                                        "example": "New York"
                                    },
                                    "state": {
                                        "type": "string",
                                        "example": "NY"
                                    },
                                    "zip_code": {
                                        "type": "string",
                                        "example": "10001"
                                    },
                                    "country": {
                                        "type": "string",
                                        "example": "USA"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Location created successfully"
                    },
                    "400": {
                        "description": "Invalid request data"
                    },
                    "401": {
                        "description": "Unauthorized access"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/locations/:id": {
            "get": {
                "tags": [
                    "Locations"
                ],
                "summary": "Get a specific Location",
                "description": "Retrieve details of a specific location by ID.",
                "operationId": "dadb9c82412f34c36f0fe0d7dd067f75",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved location details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "type_id": {
                                            "type": "integer",
                                            "example": 5
                                        },
                                        "user_id": {
                                            "type": "integer",
                                            "example": 1001
                                        },
                                        "phone": {
                                            "type": "string",
                                            "example": "+1234567890"
                                        },
                                        "address": {
                                            "type": "string",
                                            "example": "123 Main St"
                                        },
                                        "link": {
                                            "type": "string",
                                            "example": "https://provider.com/location"
                                        },
                                        "display_name": {
                                            "type": "string",
                                            "example": "Central Clinic"
                                        },
                                        "city": {
                                            "type": "string",
                                            "example": "New York"
                                        },
                                        "state": {
                                            "type": "string",
                                            "example": "NY"
                                        },
                                        "zip_code": {
                                            "type": "string",
                                            "example": "10001"
                                        },
                                        "country": {
                                            "type": "string",
                                            "example": "USA"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Location not found"
                    },
                    "401": {
                        "description": "Unauthorized access"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Locations"
                ],
                "summary": "Update an existing Location",
                "description": "Update details of a specific location.",
                "operationId": "25a18849fd31ccabc6f1e19cf8de601d",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "type_id": {
                                        "type": "integer",
                                        "example": 5
                                    },
                                    "user_id": {
                                        "type": "integer",
                                        "example": 1001
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "+1234567890"
                                    },
                                    "address": {
                                        "type": "string",
                                        "example": "123 Main St"
                                    },
                                    "link": {
                                        "type": "string",
                                        "example": "https://provider.com/location"
                                    },
                                    "display_name": {
                                        "type": "string",
                                        "example": "Central Clinic"
                                    },
                                    "city": {
                                        "type": "string",
                                        "example": "New York"
                                    },
                                    "state": {
                                        "type": "string",
                                        "example": "NY"
                                    },
                                    "zip_code": {
                                        "type": "string",
                                        "example": "10001"
                                    },
                                    "country": {
                                        "type": "string",
                                        "example": "USA"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Location updated successfully"
                    },
                    "400": {
                        "description": "Invalid request data"
                    },
                    "404": {
                        "description": "Location not found"
                    },
                    "401": {
                        "description": "Unauthorized access"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Locations"
                ],
                "summary": "Delete a Location",
                "description": "Remove a location from the system.",
                "operationId": "c22648cfe8bb320919b4d164482941e3",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Location deleted successfully"
                    },
                    "404": {
                        "description": "Location not found"
                    },
                    "401": {
                        "description": "Unauthorized access"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/location_types": {
            "get": {
                "tags": [
                    "LocationType"
                ],
                "summary": "Get all location types",
                "description": "This endpoint allows the user to retrieve all location types.",
                "operationId": "eafff54c23b7a7a844c9a5f12cc9816e",
                "responses": {
                    "200": {
                        "description": "Successfully retrieved location types",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "name": {
                                                "type": "string",
                                                "example": "Warehouse"
                                            },
                                            "description": {
                                                "type": "string",
                                                "example": "A type of location for storing products"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "LocationType"
                ],
                "summary": "Create a new location type",
                "description": "This endpoint allows the user to create a new location type.",
                "operationId": "182e66d4cb823c4365c645ad83d2b15a",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Warehouse"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "A type of location for storing products"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Location type created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Location type created successfully"
                                        },
                                        "location_type": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Warehouse"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "A type of location for storing products"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - No valid token provided",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized - Token not provided or invalid"
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Missing or invalid data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid data provided"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An unexpected error occurred."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/location_types/:id": {
            "get": {
                "tags": [
                    "LocationType"
                ],
                "summary": "Get a specific location type",
                "description": "This endpoint allows the user to retrieve details of a specific location type.",
                "operationId": "cf202b7c18214ed7020ed16e5e768c5b",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the location type to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved location type",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "Warehouse"
                                        },
                                        "description": {
                                            "type": "string",
                                            "example": "A type of location for storing products"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - No valid token provided",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized - Token not provided or invalid"
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Location type not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Location type not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An unexpected error occurred."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "LocationType"
                ],
                "summary": "Update an existing location type",
                "description": "This endpoint allows the user to update the details of a specific location type.",
                "operationId": "20c50c5b11a01264d3f1f912c42a50ba",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the location type to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Updated Warehouse"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Updated description for the location type"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Location type updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Location type updated successfully"
                                        },
                                        "location_type": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Updated Warehouse"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "Updated description for the location type"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - No valid token provided",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized - Token not provided or invalid"
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Location type not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Location type not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An unexpected error occurred."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "LocationType"
                ],
                "summary": "Delete a location type",
                "description": "This endpoint allows the user to delete a specific location type.",
                "operationId": "953943564e1e8216d283cd831a4918d4",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the location type to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Location type deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Location type deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - No valid token provided",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized - Token not provided or invalid"
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Location type not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Location type not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An unexpected error occurred."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/services": {
            "get": {
                "tags": [
                    "Services"
                ],
                "summary": "Get all Services",
                "description": "Retrieve all available services.",
                "operationId": "ddc13a03a35b36d8516fab8fd3889d0b",
                "responses": {
                    "200": {
                        "description": "Successfully retrieved services",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "user_id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "service_name": {
                                                "type": "string",
                                                "example": "Consultation"
                                            },
                                            "display_name": {
                                                "type": "string",
                                                "example": "General Consultation"
                                            },
                                            "code": {
                                                "type": "string",
                                                "example": "CONS001"
                                            },
                                            "duration": {
                                                "type": "integer",
                                                "example": 30
                                            },
                                            "price": {
                                                "type": "number",
                                                "format": "float",
                                                "example": 50
                                            },
                                            "description": {
                                                "type": "string",
                                                "example": "Basic consultation service"
                                            },
                                            "group_event": {
                                                "type": "boolean",
                                                "example": false
                                            },
                                            "max_attendees": {
                                                "type": "integer",
                                                "example": 10
                                            },
                                            "taxable": {
                                                "type": "boolean",
                                                "example": true
                                            },
                                            "bookable_online": {
                                                "type": "boolean",
                                                "example": true
                                            },
                                            "allow_new_clients": {
                                                "type": "boolean",
                                                "example": true
                                            },
                                            "team_members": {
                                                "type": "array",
                                                "items": {
                                                    "type": "integer"
                                                },
                                                "example": [
                                                    1,
                                                    2,
                                                    3
                                                ]
                                            },
                                            "locations": {
                                                "type": "array",
                                                "items": {
                                                    "type": "integer"
                                                },
                                                "example": [
                                                    1,
                                                    2,
                                                    3
                                                ]
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Error"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Server error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Services"
                ],
                "summary": "Create a new Service",
                "description": "Create a new service entry in the system.",
                "operationId": "4185c7db279c658b19c4a88d582f67b4",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "user_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "service_name": {
                                        "type": "string",
                                        "example": "Consultation"
                                    },
                                    "display_name": {
                                        "type": "string",
                                        "example": "General Consultation"
                                    },
                                    "code": {
                                        "type": "string",
                                        "example": "CONS001"
                                    },
                                    "duration": {
                                        "type": "integer",
                                        "example": 30
                                    },
                                    "price": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 50
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Basic consultation service"
                                    },
                                    "group_event": {
                                        "type": "boolean",
                                        "example": false
                                    },
                                    "max_attendees": {
                                        "type": "integer",
                                        "example": 10
                                    },
                                    "taxable": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "bookable_online": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "allow_new_clients": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "team_members": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        },
                                        "example": [
                                            1,
                                            2,
                                            3
                                        ]
                                    },
                                    "locations": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        },
                                        "example": [
                                            1,
                                            2,
                                            3
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Service created successfully"
                    },
                    "400": {
                        "description": "Invalid request data"
                    },
                    "401": {
                        "description": "Unauthorized access"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/services/user": {
            "get": {
                "tags": [
                    "Services"
                ],
                "summary": "Get all user Services",
                "description": "Retrieve all available services.",
                "operationId": "504f39b321f4a71ae768d496704e4c57",
                "responses": {
                    "200": {
                        "description": "Successfully retrieved services",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "user_id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "service_name": {
                                                "type": "string",
                                                "example": "Consultation"
                                            },
                                            "display_name": {
                                                "type": "string",
                                                "example": "General Consultation"
                                            },
                                            "code": {
                                                "type": "string",
                                                "example": "CONS001"
                                            },
                                            "duration": {
                                                "type": "integer",
                                                "example": 30
                                            },
                                            "price": {
                                                "type": "number",
                                                "format": "float",
                                                "example": 50
                                            },
                                            "description": {
                                                "type": "string",
                                                "example": "Basic consultation service"
                                            },
                                            "group_event": {
                                                "type": "boolean",
                                                "example": false
                                            },
                                            "max_attendees": {
                                                "type": "integer",
                                                "example": 10
                                            },
                                            "taxable": {
                                                "type": "boolean",
                                                "example": true
                                            },
                                            "bookable_online": {
                                                "type": "boolean",
                                                "example": true
                                            },
                                            "allow_new_clients": {
                                                "type": "boolean",
                                                "example": true
                                            },
                                            "team_members": {
                                                "type": "array",
                                                "items": {
                                                    "type": "integer"
                                                },
                                                "example": [
                                                    1,
                                                    2,
                                                    3
                                                ]
                                            },
                                            "locations": {
                                                "type": "array",
                                                "items": {
                                                    "type": "integer"
                                                },
                                                "example": [
                                                    1,
                                                    2,
                                                    3
                                                ]
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Error"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Server error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/services/:id": {
            "get": {
                "tags": [
                    "Services"
                ],
                "summary": "Get a specific Service",
                "description": "Retrieve details of a single service.",
                "operationId": "840b91766b03e77022740359751002aa",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Service ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved service",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user_id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "service_name": {
                                            "type": "string",
                                            "example": "Consultation"
                                        },
                                        "display_name": {
                                            "type": "string",
                                            "example": "General Consultation"
                                        },
                                        "code": {
                                            "type": "string",
                                            "example": "CONS001"
                                        },
                                        "duration": {
                                            "type": "integer",
                                            "example": 30
                                        },
                                        "price": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 50
                                        },
                                        "description": {
                                            "type": "string",
                                            "example": "Basic consultation service"
                                        },
                                        "group_event": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "max_attendees": {
                                            "type": "integer",
                                            "example": 10
                                        },
                                        "taxable": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "bookable_online": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "allow_new_clients": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "team_members": {
                                            "type": "array",
                                            "items": {
                                                "type": "integer"
                                            },
                                            "example": [
                                                1,
                                                2,
                                                3
                                            ]
                                        },
                                        "locations": {
                                            "type": "array",
                                            "items": {
                                                "type": "integer"
                                            },
                                            "example": [
                                                1,
                                                2,
                                                3
                                            ]
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Error"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Server error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Services"
                ],
                "summary": "Update an existing Service",
                "description": "Update details of a specific service.",
                "operationId": "1cdcf81d622fa78cc8a65b34d849d496",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "service_name": {
                                        "type": "string",
                                        "example": "Updated Consultation"
                                    },
                                    "display_name": {
                                        "type": "string",
                                        "example": "Updated General Consultation"
                                    },
                                    "code": {
                                        "type": "string",
                                        "example": "CONS002"
                                    },
                                    "duration": {
                                        "type": "integer",
                                        "example": 45
                                    },
                                    "price": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 60
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Updated description"
                                    },
                                    "group_event": {
                                        "type": "boolean",
                                        "example": false
                                    },
                                    "max_attendees": {
                                        "type": "integer",
                                        "example": 15
                                    },
                                    "taxable": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "bookable_online": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "allow_new_clients": {
                                        "type": "boolean",
                                        "example": false
                                    },
                                    "team_members": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        },
                                        "example": [
                                            1,
                                            2,
                                            3
                                        ]
                                    },
                                    "locations": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        },
                                        "example": [
                                            1,
                                            2,
                                            3
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Service updated successfully"
                    },
                    "400": {
                        "description": "Invalid request data"
                    },
                    "404": {
                        "description": "Service not found"
                    },
                    "401": {
                        "description": "Unauthorized access"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Services"
                ],
                "summary": "Delete a Service",
                "description": "Remove a service from the system.",
                "operationId": "6028366b5326311fd283c928e62397d7",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Service deleted successfully"
                    },
                    "404": {
                        "description": "Service not found"
                    },
                    "401": {
                        "description": "Unauthorized access"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "responses": {
            "401": {
                "description": "Unauthorized - No valid token provided",
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Unauthorized - Token not provided or invalid"
                                },
                                "success": {
                                    "type": "boolean",
                                    "example": false
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "404": {
                "description": "Location typeS not found",
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Location typeS not found"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "500": {
                "description": "Internal server error",
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "An unexpected error occurred."
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        }
    },
    "tags": [
        {
            "name": "Auth",
            "description": "Auth"
        },
        {
            "name": "User",
            "description": "User"
        },
        {
            "name": "Locations",
            "description": "Locations"
        },
        {
            "name": "LocationType",
            "description": "LocationType"
        },
        {
            "name": "Services",
            "description": "Services"
        }
    ]
}