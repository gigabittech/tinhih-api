{
    "openapi": "3.0.0",
    "info": {
        "title": "API Documentation",
        "description": "API documentation for TiNHiH Portal",
        "contact": {
            "email": "support@gigabit.agency"
        },
        "version": "1.0.0"
    },
    "paths": {
        "/api/v1/appointments": {
            "get": {
                "tags": [
                    "Appointments"
                ],
                "summary": "Get all appointments",
                "description": "Retrieves a list of appointments.",
                "operationId": "7bca4835549b6ad8617b19da1d1bb794",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "query",
                        "description": "Filter appointments by user ID",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Appointments retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Appointments retrieved"
                                        },
                                        "appointments": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "date": {
                                                        "type": "string",
                                                        "format": "date",
                                                        "example": "2025-03-27"
                                                    },
                                                    "time": {
                                                        "type": "string",
                                                        "example": "10:00 AM"
                                                    },
                                                    "status": {
                                                        "type": "string",
                                                        "example": "confirmed"
                                                    },
                                                    "locations": {
                                                        "type": "array",
                                                        "items": {
                                                            "properties": {
                                                                "name": {
                                                                    "type": "string",
                                                                    "example": "New York Office"
                                                                },
                                                                "address": {
                                                                    "type": "string",
                                                                    "example": "123 Main St, New York, NY"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "services": {
                                                        "type": "array",
                                                        "items": {
                                                            "properties": {
                                                                "service_name": {
                                                                    "type": "string",
                                                                    "example": "Consultation"
                                                                },
                                                                "service_description": {
                                                                    "type": "string",
                                                                    "example": "One-hour consultation with a specialist"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "attendees": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string",
                                                            "example": "John Doe"
                                                        }
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Something went wrong"
                                        },
                                        "errors": {
                                            "type": "string",
                                            "example": "Error details"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Appointments"
                ],
                "summary": "Create a new appointment",
                "description": "Creates a new appointment with associated locations, services, and attendees.",
                "operationId": "7c2cc33d51f61ed27c6777d5c4405a1e",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "workspace_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-03-27"
                                    },
                                    "time": {
                                        "type": "string",
                                        "example": "10:00 AM"
                                    },
                                    "attendees": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "example": "John Doe"
                                        }
                                    },
                                    "services": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    },
                                    "locations": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Meeting with the client"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Appointment successfully booked",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Appointment successfully booked"
                                        },
                                        "appointment": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "date": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "example": "2025-03-27"
                                                },
                                                "time": {
                                                    "type": "string",
                                                    "example": "10:00 AM"
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "confirmed"
                                                },
                                                "locations": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "New York Office"
                                                    }
                                                },
                                                "services": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "Consultation"
                                                    }
                                                },
                                                "attendees": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "John Doe"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Something went wrong"
                                        },
                                        "errors": {
                                            "type": "string",
                                            "example": "Error details"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/appointments/:id": {
            "get": {
                "tags": [
                    "Appointments"
                ],
                "summary": "Get a single appointment",
                "description": "Retrieve details of a single appointment.",
                "operationId": "9247299e59bba614a8a1de9c7a0821e2",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the appointment to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Appointment retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Appointment retrieve successful"
                                        },
                                        "appointment": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "date": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "example": "2025-03-27"
                                                },
                                                "time": {
                                                    "type": "string",
                                                    "example": "10:00 AM"
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "confirmed"
                                                },
                                                "locations": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "New York Office"
                                                    }
                                                },
                                                "services": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "Consultation"
                                                    }
                                                },
                                                "attendees": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "John Doe"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Appointment not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Appointment not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Something went wrong"
                                        },
                                        "errors": {
                                            "type": "string",
                                            "example": "Error details"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Appointments"
                ],
                "summary": "Update an existing appointment",
                "description": "Updates an existing appointment with new details.",
                "operationId": "9cba0356adbd215e7d1b9f4c7e0c442b",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the appointment to update",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "workspace_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-03-27"
                                    },
                                    "time": {
                                        "type": "string",
                                        "example": "10:00 AM"
                                    },
                                    "attendees": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "example": "John Doe"
                                        }
                                    },
                                    "services": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    },
                                    "locations": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Updated meeting with the client"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Appointment successfully updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Appointment successfully updated"
                                        },
                                        "appointment": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "date": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "example": "2025-03-27"
                                                },
                                                "time": {
                                                    "type": "string",
                                                    "example": "10:00 AM"
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "confirmed"
                                                },
                                                "locations": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "New York Office"
                                                    }
                                                },
                                                "services": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "Consultation"
                                                    }
                                                },
                                                "attendees": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "John Doe"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Something went wrong"
                                        },
                                        "errors": {
                                            "type": "string",
                                            "example": "Error details"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Appointments"
                ],
                "summary": "Delete an appointment",
                "description": "Deletes an existing appointment by ID.",
                "operationId": "d6f64ede7f65d0406ed4fa5285ba7f51",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Appointment ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Appointment deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Appointment deleted"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Server error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/auth/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Login user",
                "description": "This endpoint allows a user to log in using their email and password. A valid token is returned upon successful authentication.",
                "operationId": "f2abc19906c11eb90a3e6b8fee2ca982",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "nayem@gigabit.agency"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "secret123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful login",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Logged in successfully"
                                        },
                                        "token": {
                                            "type": "string",
                                            "example": "your-generated-token"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid email or password"
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An unexpected error occurred."
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/auth/register": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Register a new user",
                "description": "This endpoint allows a user to register by providing their name, email, password, and other required details.",
                "operationId": "6444acd1a5ffa199d669aee89ef5ae42",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "johndoe@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "password123"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User registered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Account created successfully"
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "payload": {
                                            "properties": {
                                                "token": {
                                                    "type": "string",
                                                    "example": "your-generated-token"
                                                },
                                                "user": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "John Doe"
                                                        },
                                                        "email": {
                                                            "type": "string",
                                                            "example": "johndoe@example.com"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The email field is required."
                                        },
                                        "errors": {
                                            "properties": {
                                                "email": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The email field is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An unexpected error occurred."
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/auth/logout": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Logout user",
                "description": "This endpoint allows an authenticated user to log out by revoking their issued tokens.",
                "operationId": "69318871857337c27d24f213e6d5e596",
                "responses": {
                    "200": {
                        "description": "User logged out successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User logged out successfully"
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - No valid token provided",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized - Token not provided or invalid"
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An unexpected error occurred."
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/user": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get User Details",
                "description": "Fetches details of the currently authenticated user.",
                "operationId": "d405a13e62fab5ed95c15d3571f957fb",
                "responses": {
                    "200": {
                        "description": "User details retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User details"
                                        },
                                        "user": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "role": {
                                                    "type": "string",
                                                    "example": "client"
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Developr"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "nayem@gigabit.agency"
                                                },
                                                "avatar": {
                                                    "type": "string",
                                                    "format": "uri",
                                                    "example": "https://ui-avatars.com/api/?name=Developr"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - User not authenticated"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/clients": {
            "get": {
                "tags": [
                    "Clients"
                ],
                "summary": "Get all clients",
                "description": "Retrieves a list of clients within a workspace.",
                "operationId": "3d1f2eaf31cccb53b17c54780e873521",
                "parameters": [
                    {
                        "name": "workspace_id",
                        "in": "query",
                        "description": "Filter clients by workspace ID",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Clients retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Clients retrieved"
                                        },
                                        "clients": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "first_name": {
                                                        "type": "string",
                                                        "example": "John"
                                                    },
                                                    "last_name": {
                                                        "type": "string",
                                                        "example": "Doe"
                                                    },
                                                    "status": {
                                                        "type": "string",
                                                        "example": "active"
                                                    },
                                                    "email": {
                                                        "type": "string",
                                                        "example": "john@example.com"
                                                    },
                                                    "phone": {
                                                        "type": "string",
                                                        "example": "+880 xxxx xxxxxx"
                                                    },
                                                    "in": {
                                                        "type": "string",
                                                        "example": "12345"
                                                    },
                                                    "dob": {
                                                        "type": "string",
                                                        "format": "date",
                                                        "example": "1990-01-01"
                                                    },
                                                    "sex": {
                                                        "type": "string",
                                                        "example": "male"
                                                    },
                                                    "relationship": {
                                                        "type": "string",
                                                        "example": "single"
                                                    },
                                                    "emp_status": {
                                                        "type": "string",
                                                        "example": "employed"
                                                    },
                                                    "ethnicity": {
                                                        "type": "string",
                                                        "example": "Asian"
                                                    },
                                                    "notes": {
                                                        "type": "string",
                                                        "example": "Some additional notes"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Something went wrong"
                                        },
                                        "errors": {
                                            "type": "string",
                                            "example": "Error details"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/clients/:id": {
            "get": {
                "tags": [
                    "Clients"
                ],
                "summary": "Get a single client",
                "description": "Retrieve details of a specific client by ID.",
                "operationId": "887e1951ca8008a71402402b9ae5d105",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the client",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Client retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Client retrieved successfully"
                                        },
                                        "client": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "first_name": {
                                                    "type": "string",
                                                    "example": "John"
                                                },
                                                "last_name": {
                                                    "type": "string",
                                                    "example": "Doe"
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "active"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "john@example.com"
                                                },
                                                "phone": {
                                                    "type": "string",
                                                    "example": "+880 xxxx xxxxxx"
                                                },
                                                "in": {
                                                    "type": "string",
                                                    "example": "12345"
                                                },
                                                "dob": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "example": "1990-01-01"
                                                },
                                                "sex": {
                                                    "type": "string",
                                                    "example": "male"
                                                },
                                                "relationship": {
                                                    "type": "string",
                                                    "example": "single"
                                                },
                                                "emp_status": {
                                                    "type": "string",
                                                    "example": "employed"
                                                },
                                                "ethnicity": {
                                                    "type": "string",
                                                    "example": "Asian"
                                                },
                                                "notes": {
                                                    "type": "string",
                                                    "example": "Some additional notes"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Client not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Client not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Something went wrong"
                                        },
                                        "errors": {
                                            "type": "string",
                                            "example": "Error details"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Clients"
                ],
                "summary": "Delete a client",
                "description": "Deletes a client based on the given ID.",
                "operationId": "b6ef0ecf43e981c7682f75a6f5a7bc29",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the client",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Client deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Client deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Client not found"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/clients": {
            "post": {
                "tags": [
                    "Clients"
                ],
                "summary": "Create a new client",
                "operationId": "ecc4b68974eb2bd195c301931c6570e8",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "first_name",
                                    "last_name",
                                    "email",
                                    "phone"
                                ],
                                "properties": {
                                    "first_name": {
                                        "type": "string",
                                        "example": "John"
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "example": "Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john.doe@example.com"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "+1234567890"
                                    },
                                    "status": {
                                        "type": "string",
                                        "example": "active"
                                    },
                                    "dob": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "1990-05-15"
                                    },
                                    "sex": {
                                        "type": "string",
                                        "example": "male"
                                    },
                                    "relationship": {
                                        "type": "string",
                                        "example": "single"
                                    },
                                    "emp_status": {
                                        "type": "string",
                                        "example": "employed"
                                    },
                                    "ethnicity": {
                                        "type": "string",
                                        "example": "Asian"
                                    },
                                    "notes": {
                                        "type": "string",
                                        "example": "VIP client"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Client created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Client created successfully"
                                        },
                                        "client": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "first_name": {
                                                    "type": "string",
                                                    "example": "John"
                                                },
                                                "last_name": {
                                                    "type": "string",
                                                    "example": "Doe"
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "active"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "john@example.com"
                                                },
                                                "phone": {
                                                    "type": "string",
                                                    "example": "+880 xxxx xxxxxx"
                                                },
                                                "in": {
                                                    "type": "string",
                                                    "example": "12345"
                                                },
                                                "dob": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "example": "1990-01-01"
                                                },
                                                "sex": {
                                                    "type": "string",
                                                    "example": "male"
                                                },
                                                "relationship": {
                                                    "type": "string",
                                                    "example": "single"
                                                },
                                                "emp_status": {
                                                    "type": "string",
                                                    "example": "employed"
                                                },
                                                "ethnicity": {
                                                    "type": "string",
                                                    "example": "Asian"
                                                },
                                                "notes": {
                                                    "type": "string",
                                                    "example": "Some additional notes"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Something went wrong"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Database error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/clients/:id": {
            "put": {
                "tags": [
                    "Clients"
                ],
                "summary": "Update an existing client",
                "operationId": "cb9ca1c432083655ccf77cd3428effbd",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Client ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "first_name",
                                    "last_name",
                                    "email",
                                    "phone"
                                ],
                                "properties": {
                                    "first_name": {
                                        "type": "string",
                                        "example": "John"
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "example": "Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john.doe@example.com"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "+1234567890"
                                    },
                                    "status": {
                                        "type": "string",
                                        "example": "active"
                                    },
                                    "dob": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "1990-05-15"
                                    },
                                    "sex": {
                                        "type": "string",
                                        "example": "male"
                                    },
                                    "relationship": {
                                        "type": "string",
                                        "example": "single"
                                    },
                                    "emp_status": {
                                        "type": "string",
                                        "example": "employed"
                                    },
                                    "ethnicity": {
                                        "type": "string",
                                        "example": "Asian"
                                    },
                                    "notes": {
                                        "type": "string",
                                        "example": "VIP client"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Client updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Client updated successfully"
                                        },
                                        "client": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "first_name": {
                                                    "type": "string",
                                                    "example": "John"
                                                },
                                                "last_name": {
                                                    "type": "string",
                                                    "example": "Doe"
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "active"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "john@example.com"
                                                },
                                                "phone": {
                                                    "type": "string",
                                                    "example": "+880 xxxx xxxxxx"
                                                },
                                                "in": {
                                                    "type": "string",
                                                    "example": "12345"
                                                },
                                                "dob": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "example": "1990-01-01"
                                                },
                                                "sex": {
                                                    "type": "string",
                                                    "example": "male"
                                                },
                                                "relationship": {
                                                    "type": "string",
                                                    "example": "single"
                                                },
                                                "emp_status": {
                                                    "type": "string",
                                                    "example": "employed"
                                                },
                                                "ethnicity": {
                                                    "type": "string",
                                                    "example": "Asian"
                                                },
                                                "notes": {
                                                    "type": "string",
                                                    "example": "Some additional notes"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Something went wrong"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Database error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/invoices": {
            "get": {
                "tags": [
                    "Invoices"
                ],
                "summary": "Get all invoices for the current workspace",
                "description": "Fetches all invoices associated with the currently authenticated user's active workspace.",
                "operationId": "0c771e248b01dcb6fca1f55a0cb58dc3",
                "responses": {
                    "200": {
                        "description": "Invoices retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invoices retrieved successfully"
                                        },
                                        "invoices": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 101
                                                    },
                                                    "client": {
                                                        "type": "object",
                                                        "example": {
                                                            "id": 1,
                                                            "name": "Client A"
                                                        }
                                                    },
                                                    "biller": {
                                                        "type": "object",
                                                        "example": {
                                                            "id": 2,
                                                            "name": "Biller X"
                                                        }
                                                    },
                                                    "title": {
                                                        "type": "string",
                                                        "example": "Website Development Invoice"
                                                    },
                                                    "serial_number": {
                                                        "type": "string",
                                                        "example": "INV-2024-0001"
                                                    },
                                                    "po_so_number": {
                                                        "type": "string",
                                                        "example": "PO-1001"
                                                    },
                                                    "tax_id": {
                                                        "type": "integer",
                                                        "example": 3
                                                    },
                                                    "issue_date": {
                                                        "type": "string",
                                                        "format": "date",
                                                        "example": "2024-04-01"
                                                    },
                                                    "due_date": {
                                                        "type": "string",
                                                        "format": "date",
                                                        "example": "2024-04-15"
                                                    },
                                                    "description": {
                                                        "type": "string",
                                                        "example": "Full website development service."
                                                    },
                                                    "subtotal": {
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 1000
                                                    },
                                                    "payable_amount": {
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 1150
                                                    },
                                                    "is_paid": {
                                                        "type": "boolean",
                                                        "example": false
                                                    },
                                                    "services": {
                                                        "type": "array",
                                                        "items": {
                                                            "properties": {
                                                                "id": {
                                                                    "type": "integer",
                                                                    "example": 1
                                                                },
                                                                "name": {
                                                                    "type": "string",
                                                                    "example": "Frontend Development"
                                                                },
                                                                "quantity": {
                                                                    "type": "integer",
                                                                    "example": 1
                                                                },
                                                                "price": {
                                                                    "type": "number",
                                                                    "format": "float",
                                                                    "example": 500
                                                                },
                                                                "total": {
                                                                    "type": "number",
                                                                    "format": "float",
                                                                    "example": 500
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "summary": {
                                                        "type": "object",
                                                        "example": {
                                                            "total_services": 2,
                                                            "taxes_applied": 15,
                                                            "grand_total": 1150
                                                        },
                                                        "nullable": true
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error retrieving invoices",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Error retrieving invoices"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Invoices"
                ],
                "summary": "Create a new invoice",
                "description": "Creates a new invoice with services, calculates the subtotal and payable amount including taxes.",
                "operationId": "717eb8bbf0482266fffb7aa14949da0f",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "client_id",
                                    "biller_id",
                                    "services"
                                ],
                                "properties": {
                                    "client_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "biller_id": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "title": {
                                        "type": "string",
                                        "example": "Website Development Invoice"
                                    },
                                    "serial_number": {
                                        "type": "string",
                                        "example": "INV-2024-0001"
                                    },
                                    "po_so_number": {
                                        "type": "string",
                                        "example": "PO-1001"
                                    },
                                    "tax_id": {
                                        "type": "integer",
                                        "example": 3
                                    },
                                    "issue_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2024-04-01"
                                    },
                                    "due_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2024-04-15"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Full website development service."
                                    },
                                    "services": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "price": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 500
                                                },
                                                "unit": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "date": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "example": "2024-04-01"
                                                },
                                                "taxes": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "integer",
                                                        "example": 1
                                                    }
                                                },
                                                "code": {
                                                    "type": "string",
                                                    "example": "WEBDEV-001"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Invoice created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invoice created successfully"
                                        },
                                        "invoice": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 101
                                                },
                                                "client_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "biller_id": {
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "title": {
                                                    "type": "string",
                                                    "example": "Website Development Invoice"
                                                },
                                                "serial_number": {
                                                    "type": "string",
                                                    "example": "INV-2024-0001"
                                                },
                                                "po_so_number": {
                                                    "type": "string",
                                                    "example": "PO-1001"
                                                },
                                                "tax_id": {
                                                    "type": "integer",
                                                    "example": 3
                                                },
                                                "issue_date": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "example": "2024-04-01"
                                                },
                                                "due_date": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "example": "2024-04-15"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "Full website development service."
                                                },
                                                "subtotal": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 1000
                                                },
                                                "payable_amount": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 1150
                                                },
                                                "is_paid": {
                                                    "type": "boolean",
                                                    "example": false
                                                },
                                                "services": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "Frontend Development"
                                                            },
                                                            "quantity": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "price": {
                                                                "type": "number",
                                                                "format": "float",
                                                                "example": 500
                                                            },
                                                            "total": {
                                                                "type": "number",
                                                                "format": "float",
                                                                "example": 500
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "summary": {
                                                    "type": "object",
                                                    "example": {
                                                        "total_services": 2,
                                                        "taxes_applied": 15,
                                                        "grand_total": 1150
                                                    },
                                                    "nullable": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error creating invoice",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Error creating invoice"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/invoices/:id": {
            "get": {
                "tags": [
                    "Invoices"
                ],
                "summary": "Get a specific invoice by ID",
                "description": "Retrieves a single invoice by ID, scoped to the current user's workspace. Includes a tax summary if available.",
                "operationId": "3c1d86993cd97c86aa23de291e4ca644",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Invoice ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 101
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Invoice retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invoice retrieved successfully"
                                        },
                                        "invoice": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 101
                                                },
                                                "client": {
                                                    "type": "object",
                                                    "example": {
                                                        "id": 1,
                                                        "name": "Client A"
                                                    }
                                                },
                                                "biller": {
                                                    "type": "object",
                                                    "example": {
                                                        "id": 2,
                                                        "name": "Biller X"
                                                    }
                                                },
                                                "title": {
                                                    "type": "string",
                                                    "example": "Website Development Invoice"
                                                },
                                                "serial_number": {
                                                    "type": "string",
                                                    "example": "INV-2024-0001"
                                                },
                                                "po_so_number": {
                                                    "type": "string",
                                                    "example": "PO-1001"
                                                },
                                                "tax_id": {
                                                    "type": "integer",
                                                    "example": 3
                                                },
                                                "issue_date": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "example": "2024-04-01"
                                                },
                                                "due_date": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "example": "2024-04-15"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "Full website development service."
                                                },
                                                "subtotal": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 1000
                                                },
                                                "payable_amount": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 1150
                                                },
                                                "is_paid": {
                                                    "type": "boolean",
                                                    "example": false
                                                },
                                                "services": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "Frontend Development"
                                                            },
                                                            "quantity": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "price": {
                                                                "type": "number",
                                                                "format": "float",
                                                                "example": 500
                                                            },
                                                            "total": {
                                                                "type": "number",
                                                                "format": "float",
                                                                "example": 500
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "summary": {
                                                    "type": "object",
                                                    "example": {
                                                        "total_services": 2,
                                                        "taxes_applied": 15,
                                                        "grand_total": 1150
                                                    },
                                                    "nullable": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error retrieving invoice",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Error retrieving invoice"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Invoices"
                ],
                "summary": "Update an existing invoice",
                "description": "Updates an existing invoice with new service details and recalculates the subtotal and payable amount.",
                "operationId": "bb5c51ebd5741c2dc72d091d551392e7",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 101
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "services"
                                ],
                                "properties": {
                                    "services": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "price": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 500
                                                },
                                                "unit": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "date": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "example": "2024-04-01"
                                                },
                                                "taxes": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "integer",
                                                        "example": 1
                                                    }
                                                },
                                                "code": {
                                                    "type": "string",
                                                    "example": "WEBDEV-001"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "is_paid": {
                                        "type": "boolean",
                                        "example": false
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Invoice updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invoice updated successfully"
                                        },
                                        "invoice": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 101
                                                },
                                                "client_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "biller_id": {
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "title": {
                                                    "type": "string",
                                                    "example": "Website Development Invoice"
                                                },
                                                "serial_number": {
                                                    "type": "string",
                                                    "example": "INV-2024-0001"
                                                },
                                                "po_so_number": {
                                                    "type": "string",
                                                    "example": "PO-1001"
                                                },
                                                "tax_id": {
                                                    "type": "integer",
                                                    "example": 3
                                                },
                                                "issue_date": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "example": "2024-04-01"
                                                },
                                                "due_date": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "example": "2024-04-15"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "Full website development service."
                                                },
                                                "subtotal": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 1000
                                                },
                                                "payable_amount": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 1150
                                                },
                                                "is_paid": {
                                                    "type": "boolean",
                                                    "example": false
                                                },
                                                "services": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "Frontend Development"
                                                            },
                                                            "quantity": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "price": {
                                                                "type": "number",
                                                                "format": "float",
                                                                "example": 500
                                                            },
                                                            "total": {
                                                                "type": "number",
                                                                "format": "float",
                                                                "example": 500
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "summary": {
                                                    "type": "object",
                                                    "example": {
                                                        "total_services": 2,
                                                        "taxes_applied": 15,
                                                        "grand_total": 1150
                                                    },
                                                    "nullable": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error updating invoice",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Error updating invoice"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Invoices"
                ],
                "summary": "Delete an invoice",
                "description": "Deletes the specified invoice by its ID. If the invoice doesn't exist, a 404 response will be returned.",
                "operationId": "7e974ee8e85ffea03529816eab858667",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the invoice to be deleted",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 101
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Invoice deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invoice deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Invoice not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invoice not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error deleting invoice",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Error deleting invoice"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/invoices/:id/mark-as-paid": {
            "patch": {
                "tags": [
                    "Invoices"
                ],
                "summary": "Mark an invoice as paid",
                "description": "Marks the specified invoice as paid by updating its `is_paid` field. If the invoice doesn't exist, a 404 response will be returned.",
                "operationId": "b4188dd8251e1c9fa2dc92fb0a4f2939",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the invoice to mark as paid",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 101
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Invoice marked as paid successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Payment successful"
                                        },
                                        "invoice": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 101
                                                },
                                                "client_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "biller_id": {
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "title": {
                                                    "type": "string",
                                                    "example": "Updated Website Development Invoice"
                                                },
                                                "serial_number": {
                                                    "type": "string",
                                                    "example": "INV-2024-0002"
                                                },
                                                "po_so_number": {
                                                    "type": "string",
                                                    "example": "PO-1002"
                                                },
                                                "tax_id": {
                                                    "type": "integer",
                                                    "example": 3
                                                },
                                                "issue_date": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "example": "2024-04-10"
                                                },
                                                "due_date": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "example": "2024-04-25"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "Updated service description"
                                                },
                                                "subtotal": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 1200
                                                },
                                                "payable_amount": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 1380
                                                },
                                                "is_paid": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "services": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "Frontend Development"
                                                            },
                                                            "quantity": {
                                                                "type": "integer",
                                                                "example": 2
                                                            },
                                                            "price": {
                                                                "type": "number",
                                                                "format": "float",
                                                                "example": 600
                                                            },
                                                            "total": {
                                                                "type": "number",
                                                                "format": "float",
                                                                "example": 1200
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "summary": {
                                                    "type": "object",
                                                    "example": {
                                                        "total_services": 2,
                                                        "taxes_applied": 15,
                                                        "grand_total": 1380
                                                    },
                                                    "nullable": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Invoice not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invoice not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error marking invoice as paid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Error marking invoice as paid"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/locations": {
            "get": {
                "tags": [
                    "Locations"
                ],
                "summary": "Get all Locations",
                "description": "Retrieve all available locations with pagination.",
                "operationId": "70f5a506f0281a95a4ccf44b0dba53e7",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of results per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved paginated locations",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "current_page": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "per_page": {
                                            "type": "integer",
                                            "example": 10
                                        },
                                        "total": {
                                            "type": "integer",
                                            "example": 50
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "type_id": {
                                                        "type": "integer",
                                                        "example": 5
                                                    },
                                                    "user_id": {
                                                        "type": "integer",
                                                        "example": 1001
                                                    },
                                                    "phone": {
                                                        "type": "string",
                                                        "example": "+1234567890"
                                                    },
                                                    "address": {
                                                        "type": "string",
                                                        "example": "123 Main St"
                                                    },
                                                    "link": {
                                                        "type": "string",
                                                        "example": "https://provider.com/location"
                                                    },
                                                    "display_name": {
                                                        "type": "string",
                                                        "example": "Central Clinic"
                                                    },
                                                    "city": {
                                                        "type": "string",
                                                        "example": "New York"
                                                    },
                                                    "state": {
                                                        "type": "string",
                                                        "example": "NY"
                                                    },
                                                    "zip_code": {
                                                        "type": "string",
                                                        "example": "10001"
                                                    },
                                                    "country": {
                                                        "type": "string",
                                                        "example": "USA"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - No valid token provided",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized - Token not provided or invalid"
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Locations not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No locations found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An unexpected error occurred."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Locations"
                ],
                "summary": "Create a new Location",
                "description": "Create a new location entry.",
                "operationId": "3d76a2a5b70a3a57a2a1a4f56b069edf",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "display_name"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "type_id": {
                                        "type": "integer",
                                        "example": 5
                                    },
                                    "user_id": {
                                        "type": "integer",
                                        "example": 1001
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "+1234567890"
                                    },
                                    "address": {
                                        "type": "string",
                                        "example": "123 Main St"
                                    },
                                    "link": {
                                        "type": "string",
                                        "example": "https://provider.com/location"
                                    },
                                    "display_name": {
                                        "type": "string",
                                        "example": "Central Clinic"
                                    },
                                    "city": {
                                        "type": "string",
                                        "example": "New York"
                                    },
                                    "state": {
                                        "type": "string",
                                        "example": "NY"
                                    },
                                    "zip_code": {
                                        "type": "string",
                                        "example": "10001"
                                    },
                                    "country": {
                                        "type": "string",
                                        "example": "USA"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Location created successfully"
                    },
                    "400": {
                        "description": "Invalid request data"
                    },
                    "401": {
                        "description": "Unauthorized access"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/locations/:id": {
            "get": {
                "tags": [
                    "Locations"
                ],
                "summary": "Get a specific Location",
                "description": "Retrieve details of a specific location by ID.",
                "operationId": "dadb9c82412f34c36f0fe0d7dd067f75",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved location details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "type_id": {
                                            "type": "integer",
                                            "example": 5
                                        },
                                        "user_id": {
                                            "type": "integer",
                                            "example": 1001
                                        },
                                        "phone": {
                                            "type": "string",
                                            "example": "+1234567890"
                                        },
                                        "address": {
                                            "type": "string",
                                            "example": "123 Main St"
                                        },
                                        "link": {
                                            "type": "string",
                                            "example": "https://provider.com/location"
                                        },
                                        "display_name": {
                                            "type": "string",
                                            "example": "Central Clinic"
                                        },
                                        "city": {
                                            "type": "string",
                                            "example": "New York"
                                        },
                                        "state": {
                                            "type": "string",
                                            "example": "NY"
                                        },
                                        "zip_code": {
                                            "type": "string",
                                            "example": "10001"
                                        },
                                        "country": {
                                            "type": "string",
                                            "example": "USA"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Location not found"
                    },
                    "401": {
                        "description": "Unauthorized access"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Locations"
                ],
                "summary": "Update an existing Location",
                "description": "Update details of a specific location.",
                "operationId": "25a18849fd31ccabc6f1e19cf8de601d",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "type_id": {
                                        "type": "integer",
                                        "example": 5
                                    },
                                    "user_id": {
                                        "type": "integer",
                                        "example": 1001
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "+1234567890"
                                    },
                                    "address": {
                                        "type": "string",
                                        "example": "123 Main St"
                                    },
                                    "link": {
                                        "type": "string",
                                        "example": "https://provider.com/location"
                                    },
                                    "display_name": {
                                        "type": "string",
                                        "example": "Central Clinic"
                                    },
                                    "city": {
                                        "type": "string",
                                        "example": "New York"
                                    },
                                    "state": {
                                        "type": "string",
                                        "example": "NY"
                                    },
                                    "zip_code": {
                                        "type": "string",
                                        "example": "10001"
                                    },
                                    "country": {
                                        "type": "string",
                                        "example": "USA"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Location updated successfully"
                    },
                    "400": {
                        "description": "Invalid request data"
                    },
                    "404": {
                        "description": "Location not found"
                    },
                    "401": {
                        "description": "Unauthorized access"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Locations"
                ],
                "summary": "Delete a Location",
                "description": "Remove a location from the system.",
                "operationId": "c22648cfe8bb320919b4d164482941e3",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Location deleted successfully"
                    },
                    "404": {
                        "description": "Location not found"
                    },
                    "401": {
                        "description": "Unauthorized access"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/location_types": {
            "get": {
                "tags": [
                    "LocationType"
                ],
                "summary": "Get all location types",
                "description": "This endpoint allows the user to retrieve all location types.",
                "operationId": "eafff54c23b7a7a844c9a5f12cc9816e",
                "responses": {
                    "200": {
                        "description": "Successfully retrieved location types",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "name": {
                                                "type": "string",
                                                "example": "Warehouse"
                                            },
                                            "description": {
                                                "type": "string",
                                                "example": "A type of location for storing products"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "LocationType"
                ],
                "summary": "Create a new location type",
                "description": "This endpoint allows the user to create a new location type.",
                "operationId": "182e66d4cb823c4365c645ad83d2b15a",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Warehouse"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "A type of location for storing products"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Location type created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Location type created successfully"
                                        },
                                        "location_type": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Warehouse"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "A type of location for storing products"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - No valid token provided",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized - Token not provided or invalid"
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Missing or invalid data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid data provided"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An unexpected error occurred."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/location_types/:id": {
            "get": {
                "tags": [
                    "LocationType"
                ],
                "summary": "Get a specific location type",
                "description": "This endpoint allows the user to retrieve details of a specific location type.",
                "operationId": "cf202b7c18214ed7020ed16e5e768c5b",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the location type to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved location type",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "Warehouse"
                                        },
                                        "description": {
                                            "type": "string",
                                            "example": "A type of location for storing products"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - No valid token provided",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized - Token not provided or invalid"
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Location type not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Location type not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An unexpected error occurred."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "LocationType"
                ],
                "summary": "Update an existing location type",
                "description": "This endpoint allows the user to update the details of a specific location type.",
                "operationId": "20c50c5b11a01264d3f1f912c42a50ba",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the location type to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Updated Warehouse"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Updated description for the location type"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Location type updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Location type updated successfully"
                                        },
                                        "location_type": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Updated Warehouse"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "Updated description for the location type"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - No valid token provided",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized - Token not provided or invalid"
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Location type not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Location type not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An unexpected error occurred."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "LocationType"
                ],
                "summary": "Delete a location type",
                "description": "This endpoint allows the user to delete a specific location type.",
                "operationId": "953943564e1e8216d283cd831a4918d4",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the location type to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Location type deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Location type deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - No valid token provided",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized - Token not provided or invalid"
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Location type not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Location type not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An unexpected error occurred."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/services": {
            "get": {
                "tags": [
                    "Services"
                ],
                "summary": "Get all Services",
                "description": "Retrieve all available services.",
                "operationId": "ddc13a03a35b36d8516fab8fd3889d0b",
                "responses": {
                    "200": {
                        "description": "Successfully retrieved services",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "user_id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "service_name": {
                                                "type": "string",
                                                "example": "Consultation"
                                            },
                                            "display_name": {
                                                "type": "string",
                                                "example": "General Consultation"
                                            },
                                            "code": {
                                                "type": "string",
                                                "example": "CONS001"
                                            },
                                            "duration": {
                                                "type": "integer",
                                                "example": 30
                                            },
                                            "price": {
                                                "type": "number",
                                                "format": "float",
                                                "example": 50
                                            },
                                            "description": {
                                                "type": "string",
                                                "example": "Basic consultation service"
                                            },
                                            "group_event": {
                                                "type": "boolean",
                                                "example": false
                                            },
                                            "max_attendees": {
                                                "type": "integer",
                                                "example": 10
                                            },
                                            "taxable": {
                                                "type": "boolean",
                                                "example": true
                                            },
                                            "bookable_online": {
                                                "type": "boolean",
                                                "example": true
                                            },
                                            "allow_new_clients": {
                                                "type": "boolean",
                                                "example": true
                                            },
                                            "team_members": {
                                                "type": "array",
                                                "items": {
                                                    "type": "integer"
                                                },
                                                "example": [
                                                    1,
                                                    2,
                                                    3
                                                ]
                                            },
                                            "locations": {
                                                "type": "array",
                                                "items": {
                                                    "type": "integer"
                                                },
                                                "example": [
                                                    1,
                                                    2,
                                                    3
                                                ]
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Error"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Server error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Services"
                ],
                "summary": "Create a new Service",
                "description": "Create a new service entry in the system.",
                "operationId": "4185c7db279c658b19c4a88d582f67b4",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "user_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "service_name": {
                                        "type": "string",
                                        "example": "Consultation"
                                    },
                                    "display_name": {
                                        "type": "string",
                                        "example": "General Consultation"
                                    },
                                    "code": {
                                        "type": "string",
                                        "example": "CONS001"
                                    },
                                    "duration": {
                                        "type": "integer",
                                        "example": 30
                                    },
                                    "price": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 50
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Basic consultation service"
                                    },
                                    "group_event": {
                                        "type": "boolean",
                                        "example": false
                                    },
                                    "max_attendees": {
                                        "type": "integer",
                                        "example": 10
                                    },
                                    "taxable": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "bookable_online": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "allow_new_clients": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "team_members": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        },
                                        "example": [
                                            1,
                                            2,
                                            3
                                        ]
                                    },
                                    "locations": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        },
                                        "example": [
                                            1,
                                            2,
                                            3
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Service created successfully"
                    },
                    "400": {
                        "description": "Invalid request data"
                    },
                    "401": {
                        "description": "Unauthorized access"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/services/user": {
            "get": {
                "tags": [
                    "Services"
                ],
                "summary": "Get all user Services",
                "description": "Retrieve all available services.",
                "operationId": "504f39b321f4a71ae768d496704e4c57",
                "responses": {
                    "200": {
                        "description": "Successfully retrieved services",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "user_id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "service_name": {
                                                "type": "string",
                                                "example": "Consultation"
                                            },
                                            "display_name": {
                                                "type": "string",
                                                "example": "General Consultation"
                                            },
                                            "code": {
                                                "type": "string",
                                                "example": "CONS001"
                                            },
                                            "duration": {
                                                "type": "integer",
                                                "example": 30
                                            },
                                            "price": {
                                                "type": "number",
                                                "format": "float",
                                                "example": 50
                                            },
                                            "description": {
                                                "type": "string",
                                                "example": "Basic consultation service"
                                            },
                                            "group_event": {
                                                "type": "boolean",
                                                "example": false
                                            },
                                            "max_attendees": {
                                                "type": "integer",
                                                "example": 10
                                            },
                                            "taxable": {
                                                "type": "boolean",
                                                "example": true
                                            },
                                            "bookable_online": {
                                                "type": "boolean",
                                                "example": true
                                            },
                                            "allow_new_clients": {
                                                "type": "boolean",
                                                "example": true
                                            },
                                            "team_members": {
                                                "type": "array",
                                                "items": {
                                                    "type": "integer"
                                                },
                                                "example": [
                                                    1,
                                                    2,
                                                    3
                                                ]
                                            },
                                            "locations": {
                                                "type": "array",
                                                "items": {
                                                    "type": "integer"
                                                },
                                                "example": [
                                                    1,
                                                    2,
                                                    3
                                                ]
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Error"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Server error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/services/:id": {
            "get": {
                "tags": [
                    "Services"
                ],
                "summary": "Get a specific Service",
                "description": "Retrieve details of a single service.",
                "operationId": "840b91766b03e77022740359751002aa",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Service ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved service",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user_id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "service_name": {
                                            "type": "string",
                                            "example": "Consultation"
                                        },
                                        "display_name": {
                                            "type": "string",
                                            "example": "General Consultation"
                                        },
                                        "code": {
                                            "type": "string",
                                            "example": "CONS001"
                                        },
                                        "duration": {
                                            "type": "integer",
                                            "example": 30
                                        },
                                        "price": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 50
                                        },
                                        "description": {
                                            "type": "string",
                                            "example": "Basic consultation service"
                                        },
                                        "group_event": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "max_attendees": {
                                            "type": "integer",
                                            "example": 10
                                        },
                                        "taxable": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "bookable_online": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "allow_new_clients": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "team_members": {
                                            "type": "array",
                                            "items": {
                                                "type": "integer"
                                            },
                                            "example": [
                                                1,
                                                2,
                                                3
                                            ]
                                        },
                                        "locations": {
                                            "type": "array",
                                            "items": {
                                                "type": "integer"
                                            },
                                            "example": [
                                                1,
                                                2,
                                                3
                                            ]
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Error"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Server error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Services"
                ],
                "summary": "Update an existing Service",
                "description": "Update details of a specific service.",
                "operationId": "1cdcf81d622fa78cc8a65b34d849d496",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "service_name": {
                                        "type": "string",
                                        "example": "Updated Consultation"
                                    },
                                    "display_name": {
                                        "type": "string",
                                        "example": "Updated General Consultation"
                                    },
                                    "code": {
                                        "type": "string",
                                        "example": "CONS002"
                                    },
                                    "duration": {
                                        "type": "integer",
                                        "example": 45
                                    },
                                    "price": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 60
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Updated description"
                                    },
                                    "group_event": {
                                        "type": "boolean",
                                        "example": false
                                    },
                                    "max_attendees": {
                                        "type": "integer",
                                        "example": 15
                                    },
                                    "taxable": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "bookable_online": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "allow_new_clients": {
                                        "type": "boolean",
                                        "example": false
                                    },
                                    "team_members": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        },
                                        "example": [
                                            1,
                                            2,
                                            3
                                        ]
                                    },
                                    "locations": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        },
                                        "example": [
                                            1,
                                            2,
                                            3
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Service updated successfully"
                    },
                    "400": {
                        "description": "Invalid request data"
                    },
                    "404": {
                        "description": "Service not found"
                    },
                    "401": {
                        "description": "Unauthorized access"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Services"
                ],
                "summary": "Delete a Service",
                "description": "Remove a service from the system.",
                "operationId": "6028366b5326311fd283c928e62397d7",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Service deleted successfully"
                    },
                    "404": {
                        "description": "Service not found"
                    },
                    "401": {
                        "description": "Unauthorized access"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/taxes": {
            "get": {
                "tags": [
                    "Taxes"
                ],
                "summary": "Get all taxes",
                "operationId": "ccbd11886d2c7dbcd78cdef46857bce6",
                "responses": {
                    "200": {
                        "description": "Taxes retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Taxes retrieved successfully"
                                        },
                                        "taxes": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "VAT"
                                                    },
                                                    "percentage": {
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 15
                                                    },
                                                    "is_active": {
                                                        "type": "boolean",
                                                        "example": true
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Taxes"
                ],
                "summary": "Create a new tax",
                "operationId": "534e07676ea538bd8ac5309b5e579e6e",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "percentage"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Service Tax"
                                    },
                                    "percentage": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 5
                                    },
                                    "is_active": {
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Tax created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Tax created successfully"
                                        },
                                        "tax": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Service Tax"
                                                },
                                                "percentage": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 5
                                                },
                                                "is_active": {
                                                    "type": "boolean",
                                                    "example": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/taxes/:id": {
            "get": {
                "tags": [
                    "Taxes"
                ],
                "summary": "Get a specific tax by ID",
                "operationId": "4f3bafdab6c6c09e3195906161615928",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tax retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Tax retrieved successfully"
                                        },
                                        "tax": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "VAT"
                                                },
                                                "percentage": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 15
                                                },
                                                "is_active": {
                                                    "type": "boolean",
                                                    "example": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Taxes"
                ],
                "summary": "Update an existing tax",
                "operationId": "a178bb594db9e6fe28127e9ce875e1b4",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Updated Tax Name"
                                    },
                                    "rate": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 10
                                    },
                                    "type": {
                                        "type": "string",
                                        "example": "fixed"
                                    },
                                    "is_active": {
                                        "type": "boolean",
                                        "example": false
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Tax updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Tax updated successfully"
                                        },
                                        "tax": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Updated Tax Name"
                                                },
                                                "percentage": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 10
                                                },
                                                "is_active": {
                                                    "type": "boolean",
                                                    "example": false
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Taxes"
                ],
                "summary": "Delete a tax",
                "operationId": "b1be7d2abc7cedd0eee0b739119b1e2b",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tax deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Tax deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/members": {
            "get": {
                "tags": [
                    "Members"
                ],
                "summary": "Get all members",
                "description": "Retrieve a list of members.",
                "operationId": "e782494406353f03dfe8153c0f888eca",
                "responses": {
                    "200": {
                        "description": "List of members retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "members retrieved successfully"
                                        },
                                        "members": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "first_name": {
                                                        "type": "string",
                                                        "example": "Jhon"
                                                    },
                                                    "last_name": {
                                                        "type": "string",
                                                        "example": "Doe"
                                                    },
                                                    "email": {
                                                        "type": "string",
                                                        "example": "jhon@example.com"
                                                    },
                                                    "phone_number": {
                                                        "type": "string",
                                                        "example": "+880 xxxx xxxxxx"
                                                    },
                                                    "job_title": {
                                                        "type": "string",
                                                        "example": "Mental Health Specialist"
                                                    },
                                                    "avatar": {
                                                        "type": "string",
                                                        "example": ""
                                                    },
                                                    "npi": {
                                                        "type": "string",
                                                        "example": ""
                                                    },
                                                    "texonomy": {
                                                        "type": "string",
                                                        "example": ""
                                                    },
                                                    "workspace_id": {
                                                        "type": "string",
                                                        "example": "workspace_id"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Internal server error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Members"
                ],
                "summary": "Create a new member",
                "description": "Creates a new team member and associates services.",
                "operationId": "c23ad79500160a70b9eaec7edcd86a75",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "workspace_id",
                                    "first_name",
                                    "last_name",
                                    "email"
                                ],
                                "properties": {
                                    "workspace_id": {
                                        "type": "string",
                                        "example": "1"
                                    },
                                    "first_name": {
                                        "type": "string",
                                        "example": "John"
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "example": "Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "john@example.com"
                                    },
                                    "phone_number": {
                                        "type": "string",
                                        "example": "+880 xxxx xxxxxx"
                                    },
                                    "job_title": {
                                        "type": "string",
                                        "example": "Mental Health Specialist"
                                    },
                                    "npi": {
                                        "type": "string",
                                        "example": ""
                                    },
                                    "avatar": {
                                        "type": "string",
                                        "example": ""
                                    },
                                    "taxonomy": {
                                        "type": "string",
                                        "example": ""
                                    },
                                    "services": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "example": []
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Member created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Team member created successfully"
                                        },
                                        "member": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "first_name": {
                                                    "type": "string",
                                                    "example": "John"
                                                },
                                                "last_name": {
                                                    "type": "string",
                                                    "example": "Doe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "john@example.com"
                                                },
                                                "phone_number": {
                                                    "type": "string",
                                                    "example": "+880 xxxx xxxxxx"
                                                },
                                                "job_title": {
                                                    "type": "string",
                                                    "example": "Mental Health Specialist"
                                                },
                                                "avatar": {
                                                    "type": "string",
                                                    "example": ""
                                                },
                                                "npi": {
                                                    "type": "string",
                                                    "example": ""
                                                },
                                                "taxonomy": {
                                                    "type": "string",
                                                    "example": ""
                                                },
                                                "workspace_id": {
                                                    "type": "string",
                                                    "example": "1"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Internal server error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/members/:id": {
            "get": {
                "tags": [
                    "Members"
                ],
                "summary": "Get a member",
                "description": "Retrieve a  member.",
                "operationId": "66625137b0b60df6eb80f9c6f6076ed1",
                "responses": {
                    "200": {
                        "description": "Member retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "member retrieved successfully"
                                        },
                                        "members": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "first_name": {
                                                    "type": "string",
                                                    "example": "Jhon"
                                                },
                                                "last_name": {
                                                    "type": "string",
                                                    "example": "Doe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "jhon@example.com"
                                                },
                                                "phone_number": {
                                                    "type": "string",
                                                    "example": "+880 xxxx xxxxxx"
                                                },
                                                "job_title": {
                                                    "type": "string",
                                                    "example": "Mental Health Specialist"
                                                },
                                                "avatar": {
                                                    "type": "string",
                                                    "example": ""
                                                },
                                                "npi": {
                                                    "type": "string",
                                                    "example": ""
                                                },
                                                "texonomy": {
                                                    "type": "string",
                                                    "example": ""
                                                },
                                                "workspace_id": {
                                                    "type": "string",
                                                    "example": "workspace_id"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Internal server error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Members"
                ],
                "summary": "Update a member",
                "description": "Updates an existing team member.",
                "operationId": "f2b93a87025970a0929c1dae16a533ed",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Member ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "workspace_id",
                                    "first_name",
                                    "last_name",
                                    "email"
                                ],
                                "properties": {
                                    "workspace_id": {
                                        "type": "string",
                                        "example": "1"
                                    },
                                    "first_name": {
                                        "type": "string",
                                        "example": "John"
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "example": "Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "john@example.com"
                                    },
                                    "phone_number": {
                                        "type": "string",
                                        "example": "+880 xxxx xxxxxx"
                                    },
                                    "job_title": {
                                        "type": "string",
                                        "example": "Mental Health Specialist"
                                    },
                                    "npi": {
                                        "type": "string",
                                        "example": ""
                                    },
                                    "avatar": {
                                        "type": "string",
                                        "example": ""
                                    },
                                    "taxonomy": {
                                        "type": "string",
                                        "example": ""
                                    },
                                    "services": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "example": []
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Member updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Team member updated successfully"
                                        },
                                        "member": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "first_name": {
                                                    "type": "string",
                                                    "example": "John"
                                                },
                                                "last_name": {
                                                    "type": "string",
                                                    "example": "Doe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "john@example.com"
                                                },
                                                "phone_number": {
                                                    "type": "string",
                                                    "example": "+880 xxxx xxxxxx"
                                                },
                                                "job_title": {
                                                    "type": "string",
                                                    "example": "Mental Health Specialist"
                                                },
                                                "avatar": {
                                                    "type": "string",
                                                    "example": ""
                                                },
                                                "npi": {
                                                    "type": "string",
                                                    "example": ""
                                                },
                                                "taxonomy": {
                                                    "type": "string",
                                                    "example": ""
                                                },
                                                "workspace_id": {
                                                    "type": "string",
                                                    "example": "1"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Internal server error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Members"
                ],
                "summary": "Delete a member",
                "description": "Deletes a specific team member.",
                "operationId": "e205a816601bc7a770a2806256b7a790",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Member ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Member deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Team member deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Internal server error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/workspaces": {
            "get": {
                "tags": [
                    "Workspaces"
                ],
                "summary": "Get all workspaces",
                "description": "Retrieve a list of workspaces.",
                "operationId": "7ec577df9a4514b038e7d4213add5e12",
                "responses": {
                    "200": {
                        "description": "List of workspaces retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Workspaces retrieved successfully"
                                        },
                                        "workspaces": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Tech Hub"
                                                    },
                                                    "active": {
                                                        "type": "boolean",
                                                        "example": true
                                                    },
                                                    "country": {
                                                        "type": "string",
                                                        "example": "Bangladesh"
                                                    },
                                                    "profession": {
                                                        "type": "string",
                                                        "example": "Software Engineer"
                                                    },
                                                    "url": {
                                                        "type": "string",
                                                        "example": "https://workspace.example.com"
                                                    },
                                                    "locations": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string",
                                                            "example": "Dhaka, Bangladesh"
                                                        }
                                                    },
                                                    "members": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string",
                                                            "example": "John Doe"
                                                        }
                                                    },
                                                    "services": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string",
                                                            "example": "Web Development"
                                                        }
                                                    },
                                                    "appointments": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string",
                                                            "example": "2024-03-25 10:00 AM"
                                                        }
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Internal server error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Workspaces"
                ],
                "summary": "Create a workspace",
                "operationId": "17b0945f96c1673c55a2d3e7d1c302ae",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "country"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "My Workspace"
                                    },
                                    "country": {
                                        "type": "string",
                                        "example": "Bangladesh"
                                    },
                                    "profession": {
                                        "type": "string",
                                        "example": "Software Engineer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Workspace created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Workspace create successful"
                                        },
                                        "workspace": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "My Workspace"
                                                },
                                                "country": {
                                                    "type": "string",
                                                    "example": "Bangladesh"
                                                },
                                                "profession": {
                                                    "type": "string",
                                                    "example": "Software Engineer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/workspaces/user": {
            "get": {
                "tags": [
                    "Workspaces"
                ],
                "summary": "Get all workspaces",
                "description": "Retrieve a list of workspaces.",
                "operationId": "ce2ef25fc4c57c326517917cda7fa3fd",
                "responses": {
                    "200": {
                        "description": "List of user workspaces retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Workspaces retrieved successfully"
                                        },
                                        "workspaces": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Tech Hub"
                                                    },
                                                    "active": {
                                                        "type": "boolean",
                                                        "example": true
                                                    },
                                                    "country": {
                                                        "type": "string",
                                                        "example": "Bangladesh"
                                                    },
                                                    "profession": {
                                                        "type": "string",
                                                        "example": "Software Engineer"
                                                    },
                                                    "url": {
                                                        "type": "string",
                                                        "example": "https://workspace.example.com"
                                                    },
                                                    "locations": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string",
                                                            "example": "Dhaka, Bangladesh"
                                                        }
                                                    },
                                                    "members": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string",
                                                            "example": "John Doe"
                                                        }
                                                    },
                                                    "services": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string",
                                                            "example": "Web Development"
                                                        }
                                                    },
                                                    "appointments": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string",
                                                            "example": "2024-03-25 10:00 AM"
                                                        }
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Internal server error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/workspaces/:id": {
            "get": {
                "tags": [
                    "Workspaces"
                ],
                "summary": "Get a workspace by ID",
                "description": "Retrieve details of a single workspace by its ID.",
                "operationId": "1ec7f60ec24c73f832cb7b98ee006b52",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Workspace ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Workspace retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "Tech Hub"
                                        },
                                        "active": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "url": {
                                            "type": "string",
                                            "example": "https://workspace.example.com"
                                        },
                                        "members": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "John Doe"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Workspace not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Workspace not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Workspaces"
                ],
                "summary": "Update an existing workspace",
                "description": "Update a workspace",
                "operationId": "f254c66280bb25d27bff9efeb9bb2014",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "status"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Updated Workspace Name"
                                    },
                                    "status": {
                                        "type": "string",
                                        "example": "active"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Workspace updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Workspace update successful"
                                        },
                                        "workspace": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Updated Workspace Name"
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "active"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Workspaces"
                ],
                "summary": "Delete a workspace",
                "description": "Remove a workspace by ID.",
                "operationId": "8afacee653a7beeaa41721832ddd8da5",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Workspace ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Workspace deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Workspace deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Workspace not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Workspace not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/workspaces/toggle": {
            "post": {
                "tags": [
                    "Workspaces"
                ],
                "summary": "Toggle workspace status",
                "description": "Toggle a workspace (Activate/Deactivate)",
                "operationId": "4243a384f31f2471103a5d88fb97668c",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id"
                                ],
                                "properties": {
                                    "id": {
                                        "description": "ID of the workspace to toggle",
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Workspace toggle successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Workspace toggle successful"
                                        },
                                        "workspace": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Workspace Name"
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "active"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "responses": {
            "401": {
                "description": "Unauthorized - No valid token provided",
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Unauthorized - Token not provided or invalid"
                                },
                                "success": {
                                    "type": "boolean",
                                    "example": false
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "404": {
                "description": "Location typeS not found",
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Location typeS not found"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "500": {
                "description": "Internal server error",
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "An unexpected error occurred."
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        }
    },
    "tags": [
        {
            "name": "Appointments",
            "description": "Appointments"
        },
        {
            "name": "Auth",
            "description": "Auth"
        },
        {
            "name": "User",
            "description": "User"
        },
        {
            "name": "Clients",
            "description": "Clients"
        },
        {
            "name": "Invoices",
            "description": "Invoices"
        },
        {
            "name": "Locations",
            "description": "Locations"
        },
        {
            "name": "LocationType",
            "description": "LocationType"
        },
        {
            "name": "Services",
            "description": "Services"
        },
        {
            "name": "Taxes",
            "description": "Taxes"
        },
        {
            "name": "Members",
            "description": "Members"
        },
        {
            "name": "Workspaces",
            "description": "Workspaces"
        }
    ]
}